CREATE SCHEMA IF NOT EXISTS `progettoTIW_DB_fat`;

USE `progettoTIW_DB_fat`;

CREATE TABLE IF NOT EXISTS `User` (
  `id` INT PRIMARY KEY AUTO_INCREMENT,
  `username` VARCHAR(50) UNIQUE NOT NULL,
  `password` VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS `Album`(
  `id` INT PRIMARY KEY AUTO_INCREMENT,
  `title` VARCHAR(50) NOT NULL,
  `artist` VARCHAR(50) NOT NULL,
  `releaseYear` INT NOT NULL,
  `imgPath` VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS `Song` (
  `id` INT PRIMARY KEY AUTO_INCREMENT,
  `title` VARCHAR(50) NOT NULL,
  `albumID` INT NOT NULL,
  `genre` VARCHAR(50) NOT NULL,
  `mp3Path` VARCHAR(255) NOT NULL,
  `creatorID` INT,
  FOREIGN KEY (`creatorID`) REFERENCES `User`(`id`) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (`albumID`) REFERENCES `Album`(`id`) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS `Playlist` (
  `id` INT PRIMARY KEY AUTO_INCREMENT,
  `creatorID` INT NOT NULL,
  `title` VARCHAR(50) NOT NULL,
  `creationDate` DATE NOT NULL,
  `Sorting` VARCHAR(255),

  FOREIGN KEY (`creatorID`) REFERENCES `User`(`id`) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS `AlbumSongBinder` (
  `AlbumID` INT,
  `SongID` INT,
  PRIMARY KEY (`AlbumID`, `SongID`),
  FOREIGN KEY (`AlbumID`) REFERENCES `Album`(`id`) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (`SongID`) REFERENCES `Song`(`id`) ON UPDATE CASCADE ON DELETE CASCADE

);

CREATE TABLE IF NOT EXISTS `PlaylistSongBinder` (
  `PlaylistID` INT,
  `SongID` INT,
  PRIMARY KEY (`PlaylistID`, `SongID`),
  FOREIGN KEY (`PlaylistID`) REFERENCES `Playlist`(`id`) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (`SongID`) REFERENCES `Song`(`id`) ON UPDATE CASCADE ON DELETE CASCADE
);
